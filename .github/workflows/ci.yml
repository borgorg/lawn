name: ci
on: [push, pull_request, workflow_dispatch]

jobs:
  build-bookworm:
    name: Linux (Debian bookworm amd64)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - run: make ci-bookworm
  build-bookworm-arm64:
    name: Linux (Debian bookworm arm64)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - run: |
        echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker.service
        docker version -f '{{.Server.Experimental}}'
    - uses: docker/setup-qemu-action@v2
    - run: make ci-bookworm
      env:
        PLATFORM: linux/arm64
  build-oldest:
    name: Linux (oldest Rust)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - run: make ci-oldest
  build-stable:
    name: Linux (Rust stable)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - run: make ci-stable
  build-freebsd:
    name: FreeBSD
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - name: Enable KVM group perms
      run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
    - run: sudo apt-get update
    - run: sudo apt-get -y install vagrant vagrant-libvirt libvirt-daemon-system
    - run: sudo service libvirtd start
    - run: sudo chmod 666 /var/run/libvirt/libvirt-sock
    - run: make ci-freebsd
  build-netbsd:
    name: NetBSD
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Enable KVM group perms
      run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
    - run: sudo apt-get update
    - run: sudo apt-get -y install vagrant vagrant-libvirt libvirt-daemon-system
    - run: sudo service libvirtd start
    - run: sudo chmod 666 /var/run/libvirt/libvirt-sock
    - run: make ci-netbsd
  build-mac:
    name: macOS
    runs-on: macos-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
    - uses: actions/checkout@v3
    - run: brew install ruby asciidoctor rust
    - run: gem install rspec
    - run: mkdir ~/tmp
    - run: TMPDIR="$HOME/tmp" make test-full
